#
#
#
##################################
#          Transitions          #
#################################

# When windows get moved or resized it transitions window position 
transition = true;

# How many pixels move window to make the first position in transition (defaults to 20)
transition-offset = 10;

# Direction of transition (top, right, bottom, left) e.g: "right" direction will make
# all windows come from right to left

# (smart-x, smart-y) are smart direction that will check if there are 
# multiple windows that splits the screen and will change their directions,
# in "smart-x" it changes direction of left window to "right" and direction of 
# right window to "left", if screen is not splited and a window is taking 
# a lot of screen it will change that window direction to "left".
# "smart-y" is also exactly like "smart-x" but instead of translating directions to
# "right" and "left", it translate to "top" and "bottom"
transition-direction = "smart-x";

# Function that calculates new position of window (defaults to "ease-out-cubic")
# see https://easings.net for list of all functions
# naming conventions are different to that site tho, e.g "easeInSine" is listed
# on site but here that translated to "ease-in-sine"
transition-timing-function = "ease-out-cubic";

# Time between frames in transition. (0.01 - 1.0, defaults to 0.028)
transition-step = 0.158;

# Similar to opacity rules but determites transition direction e.g:
# "right: name *= 'Firefox'" will make firefox transition direction to right
# Specify a list of transition rules, in the format `DIRECTION:PATTERN`

# for disabling transition on specific patterns use "none" keyword as a direction
# e.g: use "none: window_type = 'popup_menu'" for disabling transitions on popup menus
transition-rule = [];
#
#################################
#             Shadows           #
#################################

shadow = true;

shadow-radius = 5;

shadow-opacity = .7

shadow-offset-x = 2;

shadow-offset-y = 2;

#################################
#           Fading              #
#################################

fading = false;

fade-in-step = 0.01;

fade-out-step = 0.01;

#################################
#   Transparency / Opacity      #
#################################

inactive-opacity = 1;
inactive-opacity-override = false;
active-opacity = 1;

#################################
#     Background-Blurring       #
#################################
blur: {
  # requires: https://github.com/ibhagwan/picom
  method = "gaussian";
  size=50;
  #strength = 100;
  #method = "kernel";
  deviation = 40.0;
  #kernel = "11x11gaussian";
  background = false;
  background-frame = false;
  background-fixed = false;
  #kernel = "3x3box";
}

# Exclude conditions for background blur.
blur-background-exclude = [
  "window_type = 'menu'",
  "window_type = 'dock'",
  "window_type = 'dropdown_menu'",
  "window_type = 'popup_menu'",
  "window_type = 'tootip'",
  "window_type = 'dnd'",
  #"class_g = 'URxvt'",
  #
  # prevents picom from blurring the background
  # when taking selection screenshot with `main`
  # https://github.com/naelstrof/maim/issues/130
  "class_g = 'slop'",
  "class_g = 'Chromium'",
  "_GTK_FRAME_EXTENTS@:c"
];

opacity-rule = [
    "85:class_g = 'Code'",
    "88:class_g = 'discord'",
    "88:class_g = 'Spotify'",
]

#################################
#       General Settings        #
#################################
no-fading-openclose=true;
realtime=true;
backend = "glx";
glx-no-stencil = true;
glx-no-rebind-pixmap = true;
no-use-damage=true;

round-borders = 1;

corner-radius = 15;

vsync = true;

use-ewmh-active-win = true;

mark-wmwin-focused = true;

mark-ovredir-focused = true;

detect-rounded-corners = true;

detect-client-opacity = true;

detect-transient = true;

detect-client-leader = true;

xrender-sync-fence=true;
use-damage = false;

log-level = "warn";

rules = (
  {
		match = "window_type = 'normal'";
		animations = (
			{
				triggers = ["close", "hide"];
				opacity = {
					curve = "linear";
					duration = 0.1;
					start = "window-raw-opacity-before";
					end = 0;
				};
		    blur-opacity = "opacity";
		    shadow-opacity = "opacity";
			},
			{
				triggers = ["open", "show"];
				opacity = {
					curve = "cubic-bezier(0,1,1,1)";
					duration = 0.2;
					start = 0;
					end = "window-raw-opacity";
				};
		    blur-opacity = "opacity";
		    shadow-opacity = "opacity";
        offset-x = "(1 - scale-x) / 2 * window-width";
        offset-y = "(1 - scale-y) / 2 * window-height";
				scale-x = {
					curve = "cubic-bezier(0,1.3,1,1)";
					duration = 0.2;
					start = 0.6;
					end = 1;
				};
				scale-y = "scale-x";
		    shadow-scale-x = "scale-x";
		    shadow-scale-y = "scale-y";
		    shadow-offset-x = "offset-x";
		    shadow-offset-y = "offset-y";
			},
			{
				triggers = ["geometry"]
				scale-x = {
					curve = "cubic-bezier(0,0,0,1.28)";
					duration = 0.2;
					start = "window-width-before / window-width";
					end = 1;
				}
				scale-y = {
					curve = "cubic-bezier(0,0,0,1.28)";
					duration = 0.2;
					start = "window-height-before / window-height";
					end = 1;
				}
				offset-x = {
					curve = "cubic-bezier(0,0,0,1.28)";
					duration = 0.2;
					start = "window-x-before - window-x";
					end = 0;
				}
				offset-y = {
					curve = "cubic-bezier(0,0,0,1.28)";
					duration = 0.2;
					start = "window-y-before - window-y";
					end = 0;
				}
		    shadow-scale-x = "scale-x";
		    shadow-scale-y = "scale-y";
		    shadow-offset-x = "offset-x";
		    shadow-offset-y = "offset-y";
			}
		)
	},
  {
		match = "class_g = 'DBeaver'";
    opacity = 0.9;
    blur-background=true;
  },
  {
		match = "class_g = 'Code'";
    opacity = 0.9;
    blur-background=true;
  },
  {
		match = "class_g = 'Spotify'";
    opacity = 0.8;
    blur-background=true;
  },
  {
		match = "class_g = 'discord'";
    opacity = 0.8;
    blur-background=true;
  },
  # Animations for Rofi launchers.
	{
		match = "class_g = 'Rofi'";
		animations = (
		{
			triggers = ["close", "hide"];
			preset = "disappear";
			duration = 0.05;
			scale = 0.5;
		},
		{
			triggers = ["open", "show"];
			preset = "appear";
			duration = 0.2;
			scale = 0.5;
		}
		)
	},
  # Animations for Dunst notifications.
	{
		match = "class_g = 'Dunst'";
		animations = (
		{
			triggers = ["close", "hide"];
			preset = "fly-out";	#-dunst-close-preset
			direction = "right";	#-dunst-close-direction
			duration = 0.2;
		},
		{
			triggers = ["open", "show"];
			preset = "fly-in";	#-dunst-open-preset
			direction = "right";	#-dunst-open-direction
			duration = 0.2;
		}
		)
	}

)

wintypes:
{
  notification = { 
    fade = false;
    opacity = 0.2;
    shadow = false;
    full-shadow = false;
    blur-background = false;
  }
  tooltip = { fade = false; shadow = false; opacity = 0.75; focus = true; full-shadow = false; };
  dock = { shadow = false; }
  dnd = { shadow = false; }

  popup_menu = { opacity = 1; shadow = false; full-shadow = false; }
  dropdown_menu = { opacity = 1; shadow = false; full-shadow = false; }
  menu = { opacity = 1; shadow = false; full-shadow = false; blur-background = false }

  dialog = { opacity = 0.9; shadow = true; }
};
